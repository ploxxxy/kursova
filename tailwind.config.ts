import type { Config } from 'tailwindcss'
const config = {
  darkMode: ['class'],
  content: [
    './pages/**/*.{ts,tsx}',
    './components/**/*.{ts,tsx}',
    './app/**/*.{ts,tsx}',
    './src/**/*.{ts,tsx}',
  ],
  prefix: '',
  theme: {
    container: {
      center: true,
      padding: '1rem',
      screens: {
        '2xl': '1400px',
      },
    },
    extend: {
      colors: {
        text: {
          DEFAULT: 'rgb(var(--text-500), <alpha-value>)',
          50: 'rgb(var(--text-50), <alpha-value>)',
          100: 'rgb(var(--text-100), <alpha-value>)',
          200: 'rgb(var(--text-200), <alpha-value>)',
          300: 'rgb(var(--text-300), <alpha-value>)',
          400: 'rgb(var(--text-400), <alpha-value>)',
          500: 'rgb(var(--text-500), <alpha-value>)',
          600: 'rgb(var(--text-600), <alpha-value>)',
          700: 'rgb(var(--text-700), <alpha-value>)',
          800: 'rgb(var(--text-800), <alpha-value>)',
          900: 'rgb(var(--text-900), <alpha-value>)',
          950: 'rgb(var(--text-950), <alpha-value>)',
        },
        background: {
          DEFAULT: 'rgb(var(--background), <alpha-value>)',
          50: 'rgb(var(--background-50), <alpha-value>)',
          100: 'rgb(var(--background-100), <alpha-value>)',
          200: 'rgb(var(--background-200), <alpha-value>)',
          300: 'rgb(var(--background-300), <alpha-value>)',
          400: 'rgb(var(--background-400), <alpha-value>)',
          500: 'rgb(var(--background-500), <alpha-value>)',
          600: 'rgb(var(--background-600), <alpha-value>)',
          700: 'rgb(var(--background-700), <alpha-value>)',
          800: 'rgb(var(--background-800), <alpha-value>)',
          900: 'rgb(var(--background-900), <alpha-value>)',
          950: 'rgb(var(--background-950), <alpha-value>)',
        },
        primary: {
          DEFAULT: 'rgb(var(--primary-500), <alpha-value>)',
          foreground: '#ffffff',
          50: 'rgb(var(--primary-50), <alpha-value>)',
          100: 'rgb(var(--primary-100), <alpha-value>)',
          200: 'rgb(var(--primary-200), <alpha-value>)',
          300: 'rgb(var(--primary-300), <alpha-value>)',
          400: 'rgb(var(--primary-400), <alpha-value>)',
          500: 'rgb(var(--primary-500), <alpha-value>)',
          600: 'rgb(var(--primary-600), <alpha-value>)',
          700: 'rgb(var(--primary-700), <alpha-value>)',
          800: 'rgb(var(--primary-800), <alpha-value>)',
          900: 'rgb(var(--primary-900), <alpha-value>)',
          950: 'rgb(var(--primary-950), <alpha-value>)',
        },
        secondary: {
          DEFAULT: 'rgb(var(--secondary-500), <alpha-value>)',
          foreground: '#ffffff',
          50: 'rgb(var(--secondary-50), <alpha-value>)',
          100: 'rgb(var(--secondary-100), <alpha-value>)',
          200: 'rgb(var(--secondary-200), <alpha-value>)',
          300: 'rgb(var(--secondary-300), <alpha-value>)',
          400: 'rgb(var(--secondary-400), <alpha-value>)',
          500: 'rgb(var(--secondary-500), <alpha-value>)',
          600: 'rgb(var(--secondary-600), <alpha-value>)',
          700: 'rgb(var(--secondary-700), <alpha-value>)',
          800: 'rgb(var(--secondary-800), <alpha-value>)',
          900: 'rgb(var(--secondary-900), <alpha-value>)',
          950: 'rgb(var(--secondary-950), <alpha-value>)',
        },
        accent: {
          DEFAULT: 'rgb(var(--accent-500), <alpha-value>)',
          foreground: 'rgb(var(--accent-900), <alpha-value>)',
          50: 'rgb(var(--accent-50), <alpha-value>)',
          100: 'rgb(var(--accent-100), <alpha-value>)',
          200: 'rgb(var(--accent-200), <alpha-value>)',
          300: 'rgb(var(--accent-300), <alpha-value>)',
          400: 'rgb(var(--accent-400), <alpha-value>)',
          500: 'rgb(var(--accent-500), <alpha-value>)',
          600: 'rgb(var(--accent-600), <alpha-value>)',
          700: 'rgb(var(--accent-700), <alpha-value>)',
          800: 'rgb(var(--accent-800), <alpha-value>)',
          900: 'rgb(var(--accent-900), <alpha-value>)',
          950: 'rgb(var(--accent-950), <alpha-value>)',
        },
        border: 'rgb(var(--border), <alpha-value>)',
        input: 'rgb(var(--input), <alpha-value>)',
        ring: 'rgb(var(--ring), <alpha-value>)',
        foreground: 'rgb(var(--text), <alpha-value>)',
        destructive: {
          DEFAULT: 'rgb(var(--destructive), <alpha-value>)',
          foreground: 'rgb(var(--destructive-foreground), <alpha-value>)',
        },
        muted: {
          DEFAULT: 'rgb(var(--muted), <alpha-value>)',
          foreground: 'rgb(var(--muted-foreground), <alpha-value>)',
        },
        popover: {
          DEFAULT: 'rgb(var(--popover), <alpha-value>)',
          foreground: 'rgb(var(--popover-foreground), <alpha-value>)',
        },
        card: {
          DEFAULT: 'rgb(var(--card), <alpha-value>)',
          foreground: 'rgb(var(--card-foreground), <alpha-value>)',
        },
      },
      borderRadius: {
        lg: 'var(--radius)',
        md: 'calc(var(--radius) - 2px)',
        sm: 'calc(var(--radius) - 4px)',
      },
      keyframes: {
        'accordion-down': {
          from: { height: '0' },
          to: { height: 'var(--radix-accordion-content-height)' },
        },
        'accordion-up': {
          from: { height: 'var(--radix-accordion-content-height)' },
          to: { height: '0' },
        },
      },
      animation: {
        'accordion-down': 'accordion-down 0.2s ease-out',
        'accordion-up': 'accordion-up 0.2s ease-out',
      },
    },
  },
  plugins: [require('tailwindcss-animate'), require('@tailwindcss/typography')],
} satisfies Config

export default config
